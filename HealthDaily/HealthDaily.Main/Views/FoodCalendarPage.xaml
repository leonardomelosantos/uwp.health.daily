<Page
    x:Class="HealthDaily.Main.Views.FoodCalendarPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HealthDaily.Main.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:prism="using:Prism.Windows.Mvvm" xmlns:controls="using:HealthDaily.Main.Controls" xmlns:viewmodels="using:HealthDaily.Main.ViewModels"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{ThemeResource GrayBackground}">
    
    <Page.Resources>
        
        <Style x:Key="ButtonAddNewCustomStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="204"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="MyGridRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="MyGridRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="MyGridRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="MyGridRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Fill="{ThemeResource CardColor}"
                                       Stroke="{ThemeResource GrayBorderCheckbox}" 
                                       StrokeThickness="1" 
                                       StrokeDashCap="Square" 
                                       StrokeDashOffset="1.5" 
                                       StrokeDashArray="3" />
                            
                            <ContentPresenter x:Name="ContentPresenter" 
                                              FontSize="16"
                                              Foreground="{ThemeResource GrayBorderCheckbox}" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="GridViewItemContainerCustomStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource GridViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!-- A customização do "Container grid item foi necessária apenas por causa dessa margem -->
            <Setter Property="Margin" Value="0,0,20,20"/>
            
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource GridViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource GridViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource GridViewItemDragBackground}" DragForeground="{ThemeResource GridViewItemDragForeground}" FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource GridViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource GridViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource GridViewItemRevealBorderBrush}" RevealBackground="{ThemeResource GridViewItemRevealBackground}" SelectedForeground="{ThemeResource GridViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="GridViewItemCustomTemplate" x:DataType="viewmodels:FoodEntryModel" >
            
            <controls:ImageCustomViewer Source="{x:Bind Thumbnail,Mode=OneWay}"
                                        OnRemove="{x:Bind Remove}"/>
            
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource CardColor}" Margin="10" Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition  />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Food photos calendar" Margin="0,5" />

        <Border Grid.Row="1" BorderThickness="0,0,0,1" Margin="0,5"
                BorderBrush="{ThemeResource GrayBackground}" />

        <controls:DateNavigator Width="350" HorizontalAlignment="Left" 
                                Grid.Row="2" 
                                Margin="0,5"
                                Date="{x:Bind ViewModel.Date, Mode=TwoWay}"
                                OnDateChanged="{x:Bind ViewModel.OnDateChanged}" 
                                DateTimeFormat="dddd | MMMM dd, yyyy" />

        <Button Grid.Row="3" 
                Content="Add new image" 
                Margin="0,5"
                Width="204" Height="40" 
                Style="{StaticResource ButtonAddNewCustomStyle}" 
                Click="{x:Bind ViewModel.AddNewFoodClick}" />
        
        <GridView Grid.Row="4"
                  SelectionMode="None"
                  ItemTemplate="{StaticResource GridViewItemCustomTemplate}" 
                  ItemContainerStyle="{StaticResource GridViewItemContainerCustomStyle}" 
                  ItemsSource="{x:Bind ViewModel.EntriesFood, Mode=OneWay}"
                  />

    </Grid>
</Page>
